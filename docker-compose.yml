services:
  # Development service
  frontend-dev:
    build:
      context: .
      dockerfile: Dockerfile
      target: development
    ports:
      - "${HOST_PORT:-3001}:${PORT:-3001}"
    volumes:
      - .:/app
      - /app/node_modules
    environment:
      - NODE_ENV=development
      - PORT=${PORT:-3001}
      - REACT_APP_API_URL=${REACT_APP_API_URL}
    command: ["sh", "-c", "npm ci --legacy-peer-deps && npm start"]
    profiles:
      - dev

  # Production service
  frontend-prod:
    build:
      context: .
      dockerfile: Dockerfile
      target: production
      args:
        - REACT_APP_API_URL=${REACT_APP_API_URL}
        - NODE_ENV=production
    ports:
      - "${HOST_PORT:-3000}:${PORT:-80}"
    environment:
      - NODE_ENV=production
      - PORT=${PORT:-80}
    profiles:
      - prod

  # Default production service
  frontend:
    build:
      context: .
      dockerfile: Dockerfile
      target: production
      args:
        - REACT_APP_API_URL=${REACT_APP_API_URL}
        - NODE_ENV=production
    ports:
      - "${HOST_PORT:-3000}:${PORT:-80}"
    environment:
      - NODE_ENV=production
      - PORT=${PORT:-80}
    restart: unless-stopped
    profiles:
      - prod

volumes:
  sqlite-data:
# volumes:
#   postgres_data:
